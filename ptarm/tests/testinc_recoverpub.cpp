////////////////////////////////////////////////////////////////////////
//FAKE関数

//FAKE_VALUE_FUNC(int, external_function, int);

////////////////////////////////////////////////////////////////////////

class recoverpub: public testing::Test {
protected:
    virtual void SetUp() {
        //RESET_FAKE(external_function)
        ptarm_init(PTARM_TESTNET, false);
    }

    virtual void TearDown() {
        ASSERT_EQ(0, ptarm_dbg_malloc_cnt());
        ptarm_term();
    }

public:
    static void DumpBin(const uint8_t *pData, uint16_t Len)
    {
        for (uint16_t lp = 0; lp < Len; lp++) {
            printf("%02x", pData[lp]);
        }
        printf("\n");
    }
};

////////////////////////////////////////////////////////////////////////


TEST_F(recoverpub, rec1)
{
    bool ret;

    const uint8_t PUBKEY[] = {
        0x03, 0xbe, 0xce, 0xc4, 0x1f, 0x68, 0xd7, 0x7f,
        0xde, 0x9e, 0x97, 0x2c, 0x79, 0xaa, 0x0e, 0x6e,
        0x4e, 0x81, 0x8b, 0xd3, 0x04, 0x62, 0x76, 0x96,
        0x9e, 0x79, 0x37, 0x4e, 0xc0, 0x56, 0x1b, 0xa4,
        0x59,
    };
    const uint8_t TXHASH[] = {
        0xb8, 0x81, 0xab, 0x3c, 0x47, 0x0b, 0x93, 0x98,
        0xad, 0xb5, 0xea, 0x6c, 0xb3, 0x60, 0xd1, 0x45,
        0xdf, 0x70, 0x2f, 0xa0, 0xbc, 0x0a, 0x6c, 0x01,
        0x22, 0x19, 0xfa, 0x93, 0xe7, 0x09, 0xad, 0xad,
    };
    const uint8_t SIG_RS[] = {
        0x04, 0x7c, 0x1b, 0x11, 0x11, 0xbb, 0xe0, 0xfc,
        0x09, 0xcf, 0x2e, 0xd2, 0x8d, 0xd1, 0xab, 0xd6,
        0x13, 0xc0, 0x2b, 0x74, 0x7a, 0xf8, 0xed, 0xd1,
        0x27, 0x48, 0x86, 0x65, 0x42, 0x59, 0xbb, 0xfb,
        0x1d, 0x00, 0xca, 0x3f, 0xc1, 0x0a, 0x11, 0x1a,
        0x5a, 0x3e, 0xa0, 0x66, 0x99, 0x92, 0xe4, 0xad,
        0x9a, 0x2f, 0x1c, 0x40, 0x2e, 0xc5, 0xfd, 0x29,
        0xd9, 0xe1, 0x34, 0x8a, 0xb0, 0x58, 0x4f, 0xa2,
    };

    int recid;
    ret = ptarm_tx_recover_pubkey_id(&recid, PUBKEY, SIG_RS, TXHASH);
    ASSERT_TRUE(ret);
    ASSERT_EQ(0, recid);
    //printf("recid=%d\n", recid);

    uint8_t recov_pub[PTARM_SZ_PUBKEY];
    ret = ptarm_tx_recover_pubkey(recov_pub, recid, SIG_RS, TXHASH);
    ASSERT_TRUE(ret);
    //printf("pubkey= ");
    //recoverpub::DumpBin(recov_pub, sizeof(recov_pub));
}
